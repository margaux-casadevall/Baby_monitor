/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.45
 * Generated at: 2023-01-13 17:45:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import model.Note;
import java.util.List;
import helpers.Helpers;
import java.util.Objects;

public final class notes_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Objects");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("model.Note");
    _jspx_imports_classes.add("helpers.Helpers");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

    List<Note> notes = (List<Note>)request.getAttribute("notes");
    Note selected = (Note)request.getAttribute("note");

    String query = request.getParameter("query");
    String sort = request.getParameter("sort");

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("  <meta charset=\"utf-8\">\r\n");
      out.write("  <title>Note App</title>\r\n");
      out.write("  <meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\r\n");
      out.write("  <link href=\"/css/normalize.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("  <link href=\"/css/webflow.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("  <link href=\"/css/style.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("  <link href=\"https://cdn.quilljs.com/1.3.6/quill.snow.css\" rel=\"stylesheet\">\r\n");
      out.write("  <script src=\"https://ajax.googleapis.com/ajax/libs/webfont/1.6.26/webfont.js\" type=\"text/javascript\"></script>\r\n");
      out.write("  <script src=\"https://cdn.quilljs.com/1.3.6/quill.min.js\"></script>\r\n");
      out.write("  <script type=\"text/javascript\">WebFont.load({  google: {    families: [\"Montserrat:100,100italic,200,200italic,300,300italic,400,400italic,500,500italic,600,600italic,700,700italic,800,800italic,900,900italic\"]  }});</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"body\">\r\n");
      out.write("  <div>\r\n");
      out.write("    <div class=\"w-row\">\r\n");
      out.write("      <div class=\"column w-col w-col-3\">\r\n");
      out.write("        <div class=\"container w-container\">\r\n");
      out.write("          <h1 class=\"heading\">My Notes</h1>\r\n");
      out.write("            <form id=\"sort-form\" method=\"get\">\r\n");
      out.write("                <div class=\"columns w-row\">\r\n");
      out.write("                <div class=\"w-col w-col-6\">\r\n");
      out.write("                  <div>");
      out.print(notes.size());
      out.write(" Note");
      out.print(notes.size() == 1 ? "" : "s");
      out.write("</div>\r\n");
      out.write("                </div>\r\n");
      out.write("                  <div class=\"column-2 w-col w-col-6\">\r\n");
      out.write("                    <div class=\"w-form\">\r\n");
      out.write("                        <select id=\"sort-select\" name=\"sort\" class=\"select-field w-select\">\r\n");
      out.write("                          <option value=\"0\" ");
      out.print(Objects.equals(sort, "0") ? "selected" : "");
      out.write(">Newest</option>\r\n");
      out.write("                          <option value=\"1\" ");
      out.print(Objects.equals(sort, "1") ? "selected" : "");
      out.write(">Oldest</option>\r\n");
      out.write("                          <option value=\"2\" ");
      out.print(Objects.equals(sort, "2") ? "selected" : "");
      out.write(">Last Modified</option>\r\n");
      out.write("                          <option value=\"3\" ");
      out.print(Objects.equals(sort, "3") ? "selected" : "");
      out.write(">Alphabetically</option>\r\n");
      out.write("                        </select>\r\n");
      out.write("                    </div>\r\n");
      out.write("                  </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"w-form\">\r\n");
      out.write("                  <input type=\"text\" class=\"text-field w-input\" maxlength=\"256\" name=\"query\" placeholder=\"Search notes\" value=\"");
      out.print(query != null ? query : "");
      out.write("\">\r\n");
      out.write("                </div>\r\n");
      out.write("            </form>\r\n");
      out.write("          <a id=\"new-button\" class=\"button w-button\">+ Create Note</a>\r\n");
      out.write("        </div>\r\n");
      out.write("        <ul role=\"list\" class=\"list w-list-unstyled ");
      out.print(notes.size() == 0 ? "empty" : "");
      out.write("\">\r\n");
      out.write("           ");

              if (notes.size() != 0) {
                for(Note note : notes) {
           
      out.write("\r\n");
      out.write("                    <li id=\"");
      out.print(note.getId());
      out.write("\" class=\"note-container w-container ");
      out.print(selected != null && selected.getId() == note.getId() ? "selected": "");
      out.write("\">\r\n");
      out.write("                      <h4 class=\"note-title\">");
      out.print(note.getTitle());
      out.write("</h4>\r\n");
      out.write("                      <div class=\"note-summary\">");
      out.print(Helpers.isNullOrEmpty(note.getSummary()) ? "No content" : note.getSummary());
      out.write("</div>\r\n");
      out.write("                      <div class=\"w-row\">\r\n");
      out.write("                        <div class=\"w-col w-col-6\">\r\n");
      out.write("                          <div class=\"note-status\">Created ");
      out.print(Helpers.timeAgo(note.getCreated()));
      out.write("</div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"w-col w-col-6\">\r\n");
      out.write("                            ");

                                if(note.getModified() != null) {
                            
      out.write("\r\n");
      out.write("                                    <div class=\"note-status right\">Modified ");
      out.print(Helpers.timeAgo(note.getModified()));
      out.write("</div>\r\n");
      out.write("                            ");

                                }
                            
      out.write("\r\n");
      out.write("                        </div>\r\n");
      out.write("                      </div>\r\n");
      out.write("                    </li>\r\n");
      out.write("           ");

                }
              }
              else {
           
      out.write("\r\n");
      out.write("                <p class=\"list-status\">");
      out.print(Helpers.isNullOrEmpty(query) ? "No notes" : "No results");
      out.write("</p>\r\n");
      out.write("                <p class=\"list-sub-status\">");
      out.print(Helpers.isNullOrEmpty(query) ? "Create one to get started!" : "Please try a different search!");
      out.write("</p>\r\n");
      out.write("           ");

              }
           
      out.write("\r\n");
      out.write("        </ul>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"column-3 w-col w-col-9\">\r\n");
      out.write("        <div class=\"w-form\">\r\n");
      out.write("            <form id=\"note-form\" method=\"post\" action=\"");
      out.print(Helpers.redirectUrl(request, selected != null ? "/notes/edit" : "/notes/create"));
      out.write("\"></form>\r\n");
      out.write("            <form id=\"delete-form\" method=\"post\" action=\"");
      out.print(Helpers.redirectUrl(request, "/notes/delete"));
      out.write("\"></form>\r\n");
      out.write("            <div class=\"editor-header\">\r\n");
      out.write("              <input id=\"title\" value=\"");
      out.print(selected != null ? selected.getTitle() : "");
      out.write("\" type=\"text\" class=\"title-input w-input\" maxlength=\"256\" name=\"title\" placeholder=\"Enter a title\" required form=\"note-form\">\r\n");
      out.write("              <input id=\"summary\" type=\"hidden\" name=\"summary\" form=\"note-form\">\r\n");
      out.write("              <input id=\"content\" type=\"hidden\" name=\"content\" form=\"note-form\">\r\n");
      out.write("              <input id=\"save-button\" ");
      out.print(selected != null ? "disabled" : "");
      out.write(" type=\"submit\" value=\"");
      out.print(selected != null ? "Save" : "Create");
      out.write("\" class=\"form-button save w-button\" form=\"note-form\" form=\"note-form\">\r\n");
      out.write("                ");

                    if(selected != null) {
                
      out.write("\r\n");
      out.write("                        <input type=\"hidden\" name=\"id\" value=\"");
      out.print(selected.getId());
      out.write("\" form=\"delete-form\">\r\n");
      out.write("                        <input type=\"hidden\" name=\"id\" value=\"");
      out.print(selected.getId());
      out.write("\" form=\"note-form\">\r\n");
      out.write("                        <input type=\"submit\" value=\"Delete\" class=\"form-button delete w-button\" form=\"delete-form\">\r\n");
      out.write("                ");

                    }
                
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("            <div id=\"editor\" class=\"textarea w-input\">\r\n");
      out.write("                ");
      out.print(selected != null ? selected.getContent() : "");
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("          ");

              if(selected != null) {
          
      out.write("\r\n");
      out.write("                <div id=\"status\" class=\"note-editor-status\">All changes saved</div>\r\n");
      out.write("          ");

              }
          
      out.write("\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("  <script src=\"https://d3e54v103j8qbb.cloudfront.net/js/jquery-3.5.1.min.dc5e7f18c8.js?site=6241cc9eb23ac9e950726488\" type=\"text/javascript\" integrity=\"sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("  <script src=\"/js/notes.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
